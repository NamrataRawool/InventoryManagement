<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.2</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <UserSecretsId>b641fcbf-f4dd-4f8b-a4d6-146a3ec132e0</UserSecretsId>
    <Platforms>AnyCPU;x64</Platforms>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="axios" Version="0.16.2" />
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="2.2.6" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="2.2.6">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.2.3" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="obj\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="obj\**" />
    <EmbeddedResource Remove="obj\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="obj\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="obj\InventoryManagement.csproj.nuget.cache" />
    <None Remove="obj\InventoryManagement.csproj.nuget.g.props" />
    <None Remove="obj\InventoryManagement.csproj.nuget.g.targets" />
    <None Remove="obj\project.assets.json" />
    <None Remove="obj\x64\Debug\netcoreapp2.2\InventoryManagement.AssemblyInfo.cs" />
    <None Remove="obj\x64\Debug\netcoreapp2.2\InventoryManagement.AssemblyInfoInputs.cache" />
    <None Remove="obj\x64\Debug\netcoreapp2.2\InventoryManagement.assets.cache" />
    <None Remove="obj\x64\Debug\netcoreapp2.2\InventoryManagement.csproj.CoreCompileInputs.cache" />
    <None Remove="obj\x64\Debug\netcoreapp2.2\InventoryManagement.csprojAssemblyReference.cache" />
    <None Remove="obj\x64\Debug\netcoreapp2.2\InventoryManagement.RazorAssemblyInfo.cache" />
    <None Remove="obj\x64\Debug\netcoreapp2.2\InventoryManagement.RazorAssemblyInfo.cs" />
    <None Remove="obj\x64\Debug\netcoreapp2.2\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs" />
    <None Remove="obj\x64\Debug\netcoreapp2.2\TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs" />
    <None Remove="obj\x64\Debug\netcoreapp2.2\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="shared\media\images\" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\InventoryManagement.Common\InventoryManagement.Common.csproj" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
